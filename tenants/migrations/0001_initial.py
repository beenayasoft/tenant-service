# Generated by Django 5.2 on 2025-07-07 16:16

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Nom de l'entreprise"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Domaine",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email principal"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Adresse ligne 1"
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Adresse ligne 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Code postal"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "siret",
                    models.CharField(blank=True, max_length=14, verbose_name="SIRET"),
                ),
                (
                    "vat_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Numéro de TVA"
                    ),
                ),
                (
                    "legal_form",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Forme juridique"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "is_trial",
                    models.BooleanField(
                        default=True, verbose_name="En période d'essai"
                    ),
                ),
                (
                    "trial_end_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fin de la période d'essai"
                    ),
                ),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("trial", "Essai gratuit"),
                            ("starter", "Starter"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="trial",
                        max_length=50,
                        verbose_name="Plan d'abonnement",
                    ),
                ),
                (
                    "max_users",
                    models.IntegerField(
                        default=5, verbose_name="Nombre maximum d'utilisateurs"
                    ),
                ),
                (
                    "max_storage_gb",
                    models.IntegerField(
                        default=1, verbose_name="Stockage maximum (GB)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="Créé par (user_id)"
                    ),
                ),
            ],
            options={
                "verbose_name": "Tenant",
                "verbose_name_plural": "Tenants",
                "db_table": "tenants",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["name"], name="tenants_name_bc4541_idx"),
                    models.Index(fields=["domain"], name="tenants_domain_726e44_idx"),
                    models.Index(
                        fields=["is_active"], name="tenants_is_acti_ec1713_idx"
                    ),
                    models.Index(
                        fields=["subscription_plan"], name="tenants_subscri_3ab647_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TenantSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("logo_url", models.URLField(blank=True, verbose_name="Logo")),
                (
                    "primary_color",
                    models.CharField(
                        default="#007bff", max_length=7, verbose_name="Couleur primaire"
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        default="#6c757d",
                        max_length=7,
                        verbose_name="Couleur secondaire",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Paris",
                        max_length=50,
                        verbose_name="Fuseau horaire",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="fr", max_length=10, verbose_name="Langue"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        default="DD/MM/YYYY",
                        max_length=20,
                        verbose_name="Format de date",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications email"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notifications SMS"
                    ),
                ),
                (
                    "password_expiry_days",
                    models.IntegerField(
                        default=90, verbose_name="Expiration mot de passe (jours)"
                    ),
                ),
                (
                    "max_login_attempts",
                    models.IntegerField(
                        default=5, verbose_name="Tentatives de connexion max"
                    ),
                ),
                (
                    "session_timeout_minutes",
                    models.IntegerField(
                        default=480, verbose_name="Timeout session (minutes)"
                    ),
                ),
                (
                    "require_2fa",
                    models.BooleanField(
                        default=False,
                        verbose_name="Authentification à 2 facteurs obligatoire",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paramètres Tenant",
                "verbose_name_plural": "Paramètres Tenants",
                "db_table": "tenant_settings",
            },
        ),
        migrations.CreateModel(
            name="TenantInvitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email de l'invité"),
                ),
                ("invited_by", models.UUIDField(verbose_name="Invité par (user_id)")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "Utilisateur"),
                            ("admin", "Administrateur"),
                            ("manager", "Manager"),
                        ],
                        default="user",
                        max_length=50,
                        verbose_name="Rôle",
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "is_accepted",
                    models.BooleanField(default=False, verbose_name="Acceptée"),
                ),
                (
                    "is_expired",
                    models.BooleanField(default=False, verbose_name="Expirée"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expire le")),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Acceptée le"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invitation Tenant",
                "verbose_name_plural": "Invitations Tenants",
                "db_table": "tenant_invitations",
                "indexes": [
                    models.Index(fields=["token"], name="tenant_invi_token_8b1449_idx"),
                    models.Index(fields=["email"], name="tenant_invi_email_39a62c_idx"),
                    models.Index(
                        fields=["expires_at"], name="tenant_invi_expires_74dd72_idx"
                    ),
                ],
                "unique_together": {("tenant", "email")},
            },
        ),
        migrations.CreateModel(
            name="TenantUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "active_users_count",
                    models.IntegerField(
                        default=0, verbose_name="Nombre d'utilisateurs actifs"
                    ),
                ),
                (
                    "storage_used_gb",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Stockage utilisé (GB)",
                    ),
                ),
                (
                    "api_calls_count",
                    models.IntegerField(default=0, verbose_name="Nombre d'appels API"),
                ),
                (
                    "logins_count",
                    models.IntegerField(default=0, verbose_name="Nombre de connexions"),
                ),
                (
                    "documents_created",
                    models.IntegerField(default=0, verbose_name="Documents créés"),
                ),
                (
                    "documents_updated",
                    models.IntegerField(default=0, verbose_name="Documents modifiés"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_records",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisation Tenant",
                "verbose_name_plural": "Utilisations Tenants",
                "db_table": "tenant_usage",
                "indexes": [
                    models.Index(
                        fields=["tenant", "date"], name="tenant_usag_tenant__9c6f5e_idx"
                    ),
                    models.Index(fields=["date"], name="tenant_usag_date_f761ac_idx"),
                ],
                "unique_together": {("tenant", "date")},
            },
        ),
    ]
