# Generated by Django 5.2 on 2025-07-16 11:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tenants", "0002_auto_20250707_1718"),
    ]

    operations = [
        migrations.AddField(
            model_name="tenantsettings",
            name="accent_color",
            field=models.CharField(
                default="#28a745", max_length=10, verbose_name="Couleur d'accent"
            ),
        ),
        migrations.AddField(
            model_name="tenantsettings",
            name="logo_data",
            field=models.TextField(
                blank=True,
                help_text="Logo encodé en base64",
                verbose_name="Données du logo (base64)",
            ),
        ),
        migrations.AddField(
            model_name="tenantsettings",
            name="push_notifications",
            field=models.BooleanField(default=True, verbose_name="Notifications push"),
        ),
        migrations.AlterField(
            model_name="tenantsettings",
            name="email_notifications",
            field=models.BooleanField(
                default=True, verbose_name="Notifications par email"
            ),
        ),
        migrations.AlterField(
            model_name="tenantsettings",
            name="logo_url",
            field=models.URLField(
                blank=True, max_length=255, verbose_name="URL du logo"
            ),
        ),
        migrations.AlterField(
            model_name="tenantsettings",
            name="primary_color",
            field=models.CharField(
                default="#007bff", max_length=10, verbose_name="Couleur principale"
            ),
        ),
        migrations.AlterField(
            model_name="tenantsettings",
            name="secondary_color",
            field=models.CharField(
                default="#6c757d", max_length=10, verbose_name="Couleur secondaire"
            ),
        ),
        migrations.AlterField(
            model_name="tenantsettings",
            name="sms_notifications",
            field=models.BooleanField(
                default=False, verbose_name="Notifications par SMS"
            ),
        ),
        migrations.CreateModel(
            name="TenantBankInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "iban",
                    models.CharField(blank=True, max_length=50, verbose_name="IBAN"),
                ),
                (
                    "bic",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="BIC/SWIFT"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom de la banque"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bank_info",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Informations bancaires",
                "verbose_name_plural": "Informations bancaires",
                "db_table": "tenant_bank_info",
            },
        ),
        migrations.CreateModel(
            name="TenantDocumentAppearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "header_text",
                    models.TextField(blank=True, verbose_name="Texte d'en-tête"),
                ),
                (
                    "footer_text",
                    models.TextField(blank=True, verbose_name="Texte de pied de page"),
                ),
                (
                    "show_logo",
                    models.BooleanField(default=True, verbose_name="Afficher le logo"),
                ),
                (
                    "logo_position",
                    models.CharField(
                        choices=[
                            ("left", "Gauche"),
                            ("center", "Centre"),
                            ("right", "Droite"),
                        ],
                        default="left",
                        max_length=10,
                        verbose_name="Position du logo",
                    ),
                ),
                (
                    "font_family",
                    models.CharField(
                        default="Arial", max_length=50, verbose_name="Police"
                    ),
                ),
                (
                    "font_size",
                    models.IntegerField(default=11, verbose_name="Taille de police"),
                ),
                (
                    "line_spacing",
                    models.FloatField(default=1.5, verbose_name="Interligne"),
                ),
                (
                    "margin_top",
                    models.IntegerField(default=25, verbose_name="Marge supérieure"),
                ),
                (
                    "margin_right",
                    models.IntegerField(default=20, verbose_name="Marge droite"),
                ),
                (
                    "margin_bottom",
                    models.IntegerField(default=25, verbose_name="Marge inférieure"),
                ),
                (
                    "margin_left",
                    models.IntegerField(default=20, verbose_name="Marge gauche"),
                ),
                (
                    "show_payment_details",
                    models.BooleanField(
                        default=True, verbose_name="Afficher les détails de paiement"
                    ),
                ),
                (
                    "show_legal_mentions",
                    models.BooleanField(
                        default=True, verbose_name="Afficher les mentions légales"
                    ),
                ),
                (
                    "legal_mentions",
                    models.TextField(blank=True, verbose_name="Mentions légales"),
                ),
                (
                    "table_header_color",
                    models.CharField(
                        default="#f8f9fa",
                        max_length=10,
                        verbose_name="Couleur en-tête tableau",
                    ),
                ),
                (
                    "table_alternate_color",
                    models.CharField(
                        default="#f2f2f2",
                        max_length=10,
                        verbose_name="Couleur alternée tableau",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="document_appearance",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Apparence des documents",
                "verbose_name_plural": "Apparence des documents",
                "db_table": "tenant_document_appearance",
            },
        ),
        migrations.CreateModel(
            name="TenantPaymentTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100, verbose_name="Libellé")),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Description"
                    ),
                ),
                ("days", models.IntegerField(default=0, verbose_name="Jours")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Par défaut"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_terms",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Condition de paiement",
                "verbose_name_plural": "Conditions de paiement",
                "db_table": "tenant_payment_terms",
            },
        ),
        migrations.CreateModel(
            name="TenantDocumentNumbering",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("invoice", "Facture"),
                            ("quote", "Devis"),
                            ("order", "Commande"),
                            ("delivery", "Bon de livraison"),
                            ("credit_note", "Avoir"),
                        ],
                        max_length=20,
                        verbose_name="Type de document",
                    ),
                ),
                (
                    "prefix",
                    models.CharField(blank=True, max_length=10, verbose_name="Préfixe"),
                ),
                (
                    "suffix",
                    models.CharField(blank=True, max_length=10, verbose_name="Suffixe"),
                ),
                (
                    "next_number",
                    models.IntegerField(default=1, verbose_name="Prochain numéro"),
                ),
                (
                    "padding",
                    models.IntegerField(
                        default=4,
                        help_text="Nombre de chiffres pour le numéro (ex: 4 pour 0001)",
                        verbose_name="Nombre de chiffres",
                    ),
                ),
                (
                    "include_year",
                    models.BooleanField(default=True, verbose_name="Inclure l'année"),
                ),
                (
                    "include_month",
                    models.BooleanField(default=False, verbose_name="Inclure le mois"),
                ),
                (
                    "reset_yearly",
                    models.BooleanField(
                        default=True, verbose_name="Réinitialiser chaque année"
                    ),
                ),
                (
                    "reset_monthly",
                    models.BooleanField(
                        default=False, verbose_name="Réinitialiser chaque mois"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="document_numbering",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Numérotation de document",
                "verbose_name_plural": "Numérotations de documents",
                "db_table": "tenant_document_numbering",
                "unique_together": {("tenant", "document_type")},
            },
        ),
        migrations.CreateModel(
            name="TenantVatRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=10, verbose_name="Code")),
                ("name", models.CharField(max_length=50, verbose_name="Nom")),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Taux"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Description"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Par défaut"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vat_rates",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Taux de TVA",
                "verbose_name_plural": "Taux de TVA",
                "db_table": "tenant_vat_rates",
                "unique_together": {("tenant", "code")},
            },
        ),
    ]
